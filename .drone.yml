pipeline:
  # Make sure the host machine is able to emulate arm devices
  arm-support:
    when:
      branch: [master]
      matrix:
        ARCHITECTURE: armhf
    privileged: true
    image: gcr.io/admobilize-testing/gce-builder:latest
    commands:
      - set +e
      - mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc
      - test ! -e /proc/sys/fs/binfmt_misc/arm && echo ':arm:M::\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff:/usr/bin/qemu-arm-static:' > /proc/sys/fs/binfmt_misc/register || echo 'arm file already exists'

  build-debs:
    image: gcr.io/admobilize-testing/creator-builder-${ARCHITECTURE}-${DISTRIBUTION}-${CODENAME}:${IMAGE_TAG}
    privileged: true
    commands:
      - curl https://apt.matrix.one/doc/apt-key.gpg | apt-key add -
      - export COMPONENT=$([ "${DRONE_BUILD_EVENT}" = "tag" ] && echo "main" || echo "unstable")
      - echo "deb https://apt.matrix.one/raspbian ${CODENAME} $COMPONENT" > /etc/apt/sources.list.d/matrixlabs.list
      - apt-get update
      - debuild -us -uc -b
      - mv ../*.deb .

  upload-debs:
    when:
      branch: master 
      event: [ push, tag ]
      status: success
    image: gcr.io/admobilize-testing/gce-builder:latest
    secrets: [aws_access_key_id, aws_secret_access_key, gpg_key, gpg_pass]
    commands:
      # Prepare GPG
      - echo "$${GPG_KEY}" > /tmp/tmpkey && gpg --import /tmp/tmpkey && rm /tmp/tmpkey
      - echo "personal-digest-preferences SHA512" >> /root/.gnupg/gpg.conf

      # Only TAG events are published to main
      - export COMPONENT=$([ "${DRONE_BUILD_EVENT}" = "tag" ] && echo "main" || echo "unstable")
      - export PKG_VER=$(dpkg-parsechangelog --show-field Version -ldebian/changelog)

      # Upload packages
      - mv matrixio-kernel-modules_$${PKG_VER}_armhf.deb 
           matrixio-kernel-modules_${DISTRIBUTION}-${CODENAME}-$${PKG_VER}-$${COMPONENT}_armhf.deb

      - echo "$${GPG_PASS}" | deb-s3 upload --bucket apt.matrix.one 
        --prefix $DISTRIBUTION
        --component $COMPONENT
        --codename $CODENAME
        --access-key-id $${AWS_ACCESS_KEY_ID}
        --secret-access-key $${AWS_SECRET_ACCESS_KEY}
        --sign info@matrix.one 
        --gpg-options="--batch --passphrase-fd 0"
        matrixio-kernel-modules_${DISTRIBUTION}-${CODENAME}-$${PKG_VER}-$${COMPONENT}_armhf.deb

      # Render the notification template for the notify-slack step
      - j2 --var-delimiter '%%' .drone/slack.tpl > notification.tpl

  notify-always:
    image: plugins/slack
    secrets: [slack_webhook]
    username: drone-ci-builder
    channel: notifications
    when:
      status: [ success, failure ]
      branch: master
      event: [ push, tag ]
    template: file:///drone/src/github.com/matrix-io/matrixio-kernel-modules/notification.tpl

matrix:
  include: 
    - CODENAME: stretch
      DISTRIBUTION: raspbian
      ARCHITECTURE: armhf
      IMAGE_TAG: 01c4e5c0

    - CODENAME: buster
      DISTRIBUTION: raspbian
      ARCHITECTURE: armhf
      IMAGE_TAG: 01c4e5c0
 

